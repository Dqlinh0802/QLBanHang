//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLBanHang
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLBanHangEntities12 : DbContext
    {
        public QLBanHangEntities12()
            : base("name=QLBanHangEntities12")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CHITIETHOADON> CHITIETHOADONs { get; set; }
        public virtual DbSet<CT_NHAPHANG> CT_NHAPHANG { get; set; }
        public virtual DbSet<HANGHOA> HANGHOAs { get; set; }
        public virtual DbSet<HOADON> HOADONs { get; set; }
        public virtual DbSet<HOADONNHAP> HOADONNHAPs { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANGs { get; set; }
        public virtual DbSet<NHACUNGCAP> NHACUNGCAPs { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIENs { get; set; }
        public virtual DbSet<NHOMHH> NHOMHHs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int dh_CapNhatTonKho(Nullable<int> maSP, Nullable<int> sl)
        {
            var maSPParameter = maSP.HasValue ?
                new ObjectParameter("MaSP", maSP) :
                new ObjectParameter("MaSP", typeof(int));
    
            var slParameter = sl.HasValue ?
                new ObjectParameter("sl", sl) :
                new ObjectParameter("sl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dh_CapNhatTonKho", maSPParameter, slParameter);
        }
    
        public virtual int dh_CapNhatTonKhoXoa(Nullable<int> maSP, Nullable<int> sl)
        {
            var maSPParameter = maSP.HasValue ?
                new ObjectParameter("MaSP", maSP) :
                new ObjectParameter("MaSP", typeof(int));
    
            var slParameter = sl.HasValue ?
                new ObjectParameter("sl", sl) :
                new ObjectParameter("sl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dh_CapNhatTonKhoXoa", maSPParameter, slParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dh_KiemTraCTDonHang(Nullable<int> maDH, Nullable<int> maSP)
        {
            var maDHParameter = maDH.HasValue ?
                new ObjectParameter("MaDH", maDH) :
                new ObjectParameter("MaDH", typeof(int));
    
            var maSPParameter = maSP.HasValue ?
                new ObjectParameter("MaSP", maSP) :
                new ObjectParameter("MaSP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dh_KiemTraCTDonHang", maDHParameter, maSPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dh_KiemTraDonHang(Nullable<int> maDH)
        {
            var maDHParameter = maDH.HasValue ?
                new ObjectParameter("MaDH", maDH) :
                new ObjectParameter("MaDH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dh_KiemTraDonHang", maDHParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spDSNV_Result> spDSNV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDSNV_Result>("spDSNV");
        }
    
        public virtual ObjectResult<spHD_Result> spHD(Nullable<int> maHD)
        {
            var maHDParameter = maHD.HasValue ?
                new ObjectParameter("MaHD", maHD) :
                new ObjectParameter("MaHD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHD_Result>("spHD", maHDParameter);
        }
    
        public virtual ObjectResult<spHDN_Result> spHDN(Nullable<int> maHD)
        {
            var maHDParameter = maHD.HasValue ?
                new ObjectParameter("MaHD", maHD) :
                new ObjectParameter("MaHD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHDN_Result>("spHDN", maHDParameter);
        }
    
        public virtual ObjectResult<spKH_Result> spKH()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spKH_Result>("spKH");
        }
    
        public virtual ObjectResult<spSLHNNCC_Result> spSLHNNCC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSLHNNCC_Result>("spSLHNNCC");
        }
    
        public virtual ObjectResult<spSPBC_Result> spSPBC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSPBC_Result>("spSPBC");
        }
    
        public virtual ObjectResult<spTungNhanVien_Result> spTungNhanVien(Nullable<int> maNV)
        {
            var maNVParameter = maNV.HasValue ?
                new ObjectParameter("maNV", maNV) :
                new ObjectParameter("maNV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTungNhanVien_Result>("spTungNhanVien", maNVParameter);
        }
    }
}
